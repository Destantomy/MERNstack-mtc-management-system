{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Programming\\\\WEB_Programming\\\\Projects\\\\mern-crud-maintenance-system\\\\frontend\\\\src\\\\pages\\\\Create.js\";\n// import React, {useState} from 'react'\n// import { useDataContext } from '../hooks/useDataContext'\n\n// const Create = () => {\n//   const {dispatch} = useDataContext()\n//   const [name, setName] = useState('')\n//   const [facility, setFacility] = useState('')\n//   const [issue, setIssue] = useState('')\n//   const [error, setError] = useState(null)\n\n//   const handler = async(e) => {\n//     e.preventDefault()\n//     const data = {name, facility, issue}\n//     const response = await fetch('/api/datalog', {\n//       method: 'POST',\n//       body: JSON.stringify(data),\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     })\n//     const json = await response.json()\n\n//     if (!response.ok) {\n//       setError(json.error)\n//     }\n//     if (response.ok) {\n//       setName('')\n//       setFacility('')\n//       setIssue('')\n//       setError(null)\n//       console.log('created data', json)\n//       dispatch({\n//         type: 'create_data',\n//         payload: json,\n//       })\n//     }\n//   }\n\n//   return(\n//     <form className='create' onSubmit={handler}>\n//       <h4>Add new issue</h4>\n//       <label>Name</label>\n//       <input type='text'\n//       onChange={(e) => setName(e.target.value)}\n//       value={name}>\n//       </input>\n//       <label>Facility</label>\n//       <input type='text'\n//       onChange={(e) => setFacility(e.target.value)}\n//       value={facility}>\n//       </input>\n//       <label>Issue</label>\n//       <input type='text'\n//       onChange={(e) => setIssue(e.target.value)}\n//       value={issue}>\n//       </input>\n//       <button>Add</button>\n//       {error && <div className='error'>{error}</div>}\n//     </form>\n//   )\n// }\n\n// export default Create\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Create","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Documents/Programming/WEB_Programming/Projects/mern-crud-maintenance-system/frontend/src/pages/Create.js"],"sourcesContent":["// import React, {useState} from 'react'\r\n// import { useDataContext } from '../hooks/useDataContext'\r\n\r\n// const Create = () => {\r\n//   const {dispatch} = useDataContext()\r\n//   const [name, setName] = useState('')\r\n//   const [facility, setFacility] = useState('')\r\n//   const [issue, setIssue] = useState('')\r\n//   const [error, setError] = useState(null)\r\n\r\n//   const handler = async(e) => {\r\n//     e.preventDefault()\r\n//     const data = {name, facility, issue}\r\n//     const response = await fetch('/api/datalog', {\r\n//       method: 'POST',\r\n//       body: JSON.stringify(data),\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       }\r\n//     })\r\n//     const json = await response.json()\r\n\r\n//     if (!response.ok) {\r\n//       setError(json.error)\r\n//     }\r\n//     if (response.ok) {\r\n//       setName('')\r\n//       setFacility('')\r\n//       setIssue('')\r\n//       setError(null)\r\n//       console.log('created data', json)\r\n//       dispatch({\r\n//         type: 'create_data',\r\n//         payload: json,\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   return(\r\n//     <form className='create' onSubmit={handler}>\r\n//       <h4>Add new issue</h4>\r\n//       <label>Name</label>\r\n//       <input type='text'\r\n//       onChange={(e) => setName(e.target.value)}\r\n//       value={name}>\r\n//       </input>\r\n//       <label>Facility</label>\r\n//       <input type='text'\r\n//       onChange={(e) => setFacility(e.target.value)}\r\n//       value={facility}>\r\n//       </input>\r\n//       <label>Issue</label>\r\n//       <input type='text'\r\n//       onChange={(e) => setIssue(e.target.value)}\r\n//       value={issue}>\r\n//       </input>\r\n//       <button>Add</button>\r\n//       {error && <div className='error'>{error}</div>}\r\n//     </form>\r\n//   )\r\n// }\r\n\r\n// export default Create\r\n\r\nimport React from 'react'\r\n\r\nconst Create = () => {\r\n  return (\r\n    <div>\r\n      <h1>create</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Create\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAAAC,EAAA,GANKN,MAAM;AAQZ,eAAeA,MAAM;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}