{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  // hooks\n  const [list, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  // /hooks\n\n  useEffect(() => {\n    const abortCont = new AbortController(null);\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error('couldnt fetch list from resource');\n        }\n        return res.json();\n      }).then(list => {\n        setData(list);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted');\n        } // else\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, 1000);\n    return () => abortCont.abort;\n  }, [url]);\n  return {\n    list,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"/tZoZY29UBP5ty6rZiN8Uh87MSs=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","list","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["D:/Documents/Programming/WEB_Programming/Projects/mern-crud-maintenance-system/frontend/src/handling/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst useFetch = (url) => {\r\n// hooks\r\nconst [list, setData] = useState(null);\r\nconst [isPending, setIsPending] = useState(true);\r\nconst [error, setError] = useState(null);\r\n// /hooks\r\n\r\nuseEffect(() => {\r\n    const abortCont = new AbortController(null);\r\n\r\n      setTimeout(() => {\r\n        fetch(url, {signal: abortCont.signal})\r\n        .then(res => {\r\n          if(!res.ok) {\r\n            throw Error('couldnt fetch list from resource')\r\n          }\r\n          return res.json();\r\n        })\r\n        .then(list => {\r\n          setData(list);\r\n          setIsPending(false);\r\n          setError(null)\r\n        })\r\n        .catch(err => {\r\n          if (err.name === 'AbortError') {\r\n            console.log('fetch aborted')\r\n          } // else\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        })\r\n      }, 1000);\r\n\r\n      return () => abortCont.abort;\r\n}, [url])\r\n  return {list, isPending, error}\r\n}\r\n\r\nexport default useFetch\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC;;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,IAAIC,eAAe,CAAC,IAAI,CAAC;IAEzCC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACX,GAAG,EAAE;QAACY,MAAM,EAAEJ,SAAS,CAACI;MAAM,CAAC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAI;QACX,IAAG,CAACA,GAAG,CAACC,EAAE,EAAE;UACV,MAAMC,KAAK,CAAC,kCAAkC,CAAC;QACjD;QACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CACDJ,IAAI,CAACX,IAAI,IAAI;QACZC,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,CACDW,KAAK,CAACC,GAAG,IAAI;QACZ,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC9B,CAAC,CAAC;QACFjB,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACY,GAAG,CAACI,OAAO,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMf,SAAS,CAACgB,KAAK;EAClC,CAAC,EAAE,CAACxB,GAAG,CAAC,CAAC;EACP,OAAO;IAACE,IAAI;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACjC,CAAC;AAAAL,EAAA,CAnCKF,QAAQ;AAqCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}